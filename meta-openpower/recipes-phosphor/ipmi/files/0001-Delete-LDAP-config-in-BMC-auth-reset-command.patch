From 97109c2b7967d48b86056fd2876aae7c8b27bf39 Mon Sep 17 00:00:00 2001
From: Matt Spinler <spinler@us.ibm.com>
Date: Mon, 8 Oct 2018 09:05:43 -0500
Subject: [PATCH 1/1] Delete LDAP config in BMC auth reset command

This disables LDAP authentication so that the
BMC goes back to local account authentication.

If LDAP isn't configured at the time, that is OK
and there will not be an error.

Change-Id: I20c37e83169f56789e9a6e850965a01c9be502d5
Signed-off-by: Matt Spinler <spinler@us.ibm.com>
---
 Makefile.am    |  1 +
 ldap.cpp       | 71 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 ldap.hpp       | 12 ++++++++++
 oemhandler.cpp |  7 ++++++
 4 files changed, 91 insertions(+)
 create mode 100644 ldap.cpp
 create mode 100644 ldap.hpp

diff --git a/Makefile.am b/Makefile.am
index 7ea7a69..b3b7633 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -3,6 +3,7 @@ liboemhandler_LTLIBRARIES = liboemhandler.la
 
 liboemhandler_la_SOURCES = oemhandler.cpp \
                            host-interface.cpp \
+                           ldap.cpp \
                            local_users.cpp \
                            org/open_power/OCC/Metrics/error.cpp
 
diff --git a/ldap.cpp b/ldap.cpp
new file mode 100644
index 0000000..45dbbcd
--- /dev/null
+++ b/ldap.cpp
@@ -0,0 +1,71 @@
+#include "config.h"
+#include "ldap.hpp"
+#include <host-ipmid/ipmid-host-cmd.hpp>
+#include <phosphor-logging/log.hpp>
+
+namespace ldap
+{
+
+static constexpr auto ldapCfgPath = "/xyz/openbmc_project/user/ldap/config";
+static constexpr auto deleteIface = "xyz.openbmc_project.Object.Delete";
+static constexpr auto deleteMethod = "Delete";
+
+using namespace phosphor::logging;
+
+ipmi_ret_t deleteConfig()
+{
+    auto& bus = ipmid_get_sdbus_plus_handler();
+    std::string service;
+
+    try
+    {
+        auto method = bus->new_method_call(MAPPER_BUS_NAME,
+                                           MAPPER_OBJ,
+                                           MAPPER_IFACE,
+                                           "GetObject");
+        method.append(ldapCfgPath, std::vector<std::string>{deleteIface});
+
+        auto reply = bus->call(method);
+
+        std::map<std::string, std::vector<std::string>> result;
+        reply.read(result);
+
+        if (!result.empty())
+        {
+            service = result.begin()->first;
+        }
+    }
+    catch (sdbusplus::exception::SdBusError& e)
+    {
+        //No LDAP object, no problem
+    }
+
+    if (service.empty())
+    {
+        return IPMI_CC_OK;
+    }
+
+    try
+    {
+        auto method = bus->new_method_call(service.c_str(),
+                                           ldapCfgPath,
+                                           deleteIface,
+                                           deleteMethod);
+        auto reply = bus->call(method);
+        if (reply.is_method_error())
+        {
+            log<level::ERR>("Method error on LDAP delete config call");
+            return IPMI_CC_UNSPECIFIED_ERROR;
+        }
+    }
+    catch (sdbusplus::exception::SdBusError& e)
+    {
+        log<level::ERR>("Failed deleting LDAP configuration",
+                entry("ERROR=%s", e.what()));
+        return IPMI_CC_UNSPECIFIED_ERROR;
+    }
+
+    return IPMI_CC_OK;
+}
+
+}
diff --git a/ldap.hpp b/ldap.hpp
new file mode 100644
index 0000000..f392e64
--- /dev/null
+++ b/ldap.hpp
@@ -0,0 +1,12 @@
+#pragma once
+#include <host-ipmid/ipmid-api.h>
+
+namespace ldap
+{
+    /**
+     * Deletes the LDAP configuration object, if present
+     *
+     * @return ipmi_ret_t - IPMI_CC_SUCCESS if successful
+     */
+    ipmi_ret_t deleteConfig();
+}
diff --git a/oemhandler.cpp b/oemhandler.cpp
index ce28d45..d333a1e 100644
--- a/oemhandler.cpp
+++ b/oemhandler.cpp
@@ -1,6 +1,7 @@
 #include "oemhandler.hpp"
 #include "config.h"
 #include "elog-errors.hpp"
+#include "ldap.hpp"
 #include "local_users.hpp"
 #include <host-ipmid/ipmid-api.h>
 #include <host-ipmid/ipmid-host-cmd.hpp>
@@ -225,6 +226,12 @@ ipmi_ret_t ipmi_ibm_oem_reset_bmc_auth(ipmi_netfn_t netfn, ipmi_cmd_t cmd,
         finalRC = rc;
     }
 
+    rc = ldap::deleteConfig();
+    if (rc != IPMI_CC_OK)
+    {
+        finalRC = rc;
+    }
+
     return finalRC;
 }
 
-- 
1.8.3.1

